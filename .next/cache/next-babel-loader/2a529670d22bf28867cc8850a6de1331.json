{"ast":null,"code":"import axios from \"axios\";\n\nconst crypto = require(\"crypto\");\n\nasync function handler(req, res) {\n  console.log(\"req.method in Signin:\" + req.method);\n\n  if (req.method === \"POST\") {\n    console.log('req.body.detail:' + req.body.detail);\n    console.log('req.body.email:' + req.body.email);\n    console.log('req.body.date:' + req.body.date);\n    let formData = req.body;\n    let inputEmail = req.body.email;\n    let inputDate = req.body.date;\n    let inputDetail = req.body.detail;\n    console.log('req.body.detail:' + req.body.detail);\n    const iv = \"1010101010101010\";\n    let key = \"3131313131313131313131313131313131313131313131313131313131313131\";\n    const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(key, \"hex\"), Buffer.from(iv));\n    cipher.setAutoPadding(true);\n    let crypt = cipher.update(inputDetail, 'utf8', 'base64');\n    crypt += cipher.final(\"base64\");\n    formData.detail = crypt;\n    inputDetail = crypt;\n    /* axios details */\n\n    try {\n      const response = await axios.post(\"http://localhost:8000/v1/createFeedback\", {\n        \"email\": inputEmail,\n        \"detail\": inputDetail,\n        \"date\": inputDate\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        }\n      });\n      res.status(200).json(response.data);\n    } catch (err) {\n      console.log(\"err:\" + err);\n      res.status(401).json(err.response.data);\n    }\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/satheeskumarpalanisamy/service/careerservice/client/pages/api/feedback/create.js"],"names":["axios","crypto","require","handler","req","res","console","log","method","body","detail","email","date","formData","inputEmail","inputDate","inputDetail","iv","key","cipher","createCipheriv","Buffer","from","setAutoPadding","crypt","update","final","response","post","headers","Accept","status","json","data","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BH,GAAG,CAACI,MAA1C;;AACA,MAAIJ,GAAG,CAACI,MAAJ,KAAe,MAAnB,EAA2B;AAEzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBH,GAAG,CAACK,IAAJ,CAASC,MAA1C;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBH,GAAG,CAACK,IAAJ,CAASE,KAAzC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBH,GAAG,CAACK,IAAJ,CAASG,IAAxC;AAEA,QAAIC,QAAQ,GAAGT,GAAG,CAACK,IAAnB;AACA,QAAIK,UAAU,GAAGV,GAAG,CAACK,IAAJ,CAASE,KAA1B;AACA,QAAII,SAAS,GAAGX,GAAG,CAACK,IAAJ,CAASG,IAAzB;AACA,QAAII,WAAW,GAAGZ,GAAG,CAACK,IAAJ,CAASC,MAA3B;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBH,GAAG,CAACK,IAAJ,CAASC,MAA1C;AAGA,UAAMO,EAAE,GAAG,kBAAX;AACA,QAAIC,GAAG,GAAG,kEAAV;AAEA,UAAMC,MAAM,GAAGlB,MAAM,CAACmB,cAAP,CAAsB,aAAtB,EAAqCC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiB,KAAjB,CAArC,EAA8DG,MAAM,CAACC,IAAP,CAAYL,EAAZ,CAA9D,CAAf;AACAE,IAAAA,MAAM,CAACI,cAAP,CAAsB,IAAtB;AACA,QAAIC,KAAK,GAAGL,MAAM,CAACM,MAAP,CAAcT,WAAd,EAA2B,MAA3B,EAAmC,QAAnC,CAAZ;AACAQ,IAAAA,KAAK,IAAIL,MAAM,CAACO,KAAP,CAAa,QAAb,CAAT;AAEAb,IAAAA,QAAQ,CAACH,MAAT,GAAkBc,KAAlB;AACAR,IAAAA,WAAW,GAAGQ,KAAd;AAEA;;AAEA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CACrB,yCADqB,EAErB;AACE,iBAAUd,UADZ;AAEE,kBAAWE,WAFb;AAGE,gBAASD;AAHX,OAFqB,EAQrB;AAACc,QAAAA,OAAO,EAAE;AACR,0BAAgB,kBADR;AAEPC,UAAAA,MAAM,EAAE;AAFD;AAAV,OARqB,CAAvB;AAgBAzB,MAAAA,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,QAAQ,CAACM,IAA9B;AACD,KAlBD,CAkBE,OAAOC,GAAP,EAAY;AACZ5B,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAS2B,GAArB;AACA7B,MAAAA,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsBE,GAAG,CAACP,QAAJ,CAAaM,IAAnC;AACD;AACF;AACF;;AAED,eAAe9B,OAAf","sourcesContent":["import axios from \"axios\";\nconst crypto = require(\"crypto\");\n\nasync function handler(req, res) {\n  console.log(\"req.method in Signin:\" + req.method);\n  if (req.method === \"POST\") {\n\n    console.log('req.body.detail:' + req.body.detail);\n    console.log('req.body.email:' + req.body.email);\n    console.log('req.body.date:' + req.body.date);\n\n    let formData = req.body;\n    let inputEmail = req.body.email;\n    let inputDate = req.body.date;\n    let inputDetail = req.body.detail;\n\n    console.log('req.body.detail:' + req.body.detail);\n\n\n    const iv = \"1010101010101010\";\n    let key = \"3131313131313131313131313131313131313131313131313131313131313131\";\n\n    const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(key, \"hex\"), Buffer.from(iv));\n    cipher.setAutoPadding(true)\n    let crypt = cipher.update(inputDetail, 'utf8', 'base64');\n    crypt += cipher.final(\"base64\");    \n    \n    formData.detail = crypt\n    inputDetail = crypt\n    \n    /* axios details */\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/v1/createFeedback\",\n        {\n          \"email\" : inputEmail,\n          \"detail\" : inputDetail,\n          \"date\" : inputDate\n        },\n\n        {headers: {\n          'Content-Type': 'application/json',\n           Accept: 'application/json'\n      }\n        \n        }\n      );\n\n      res.status(200).json(response.data);\n    } catch (err) {\n      console.log(\"err:\" + err);\n      res.status(401).json( err.response.data );\n    }\n  }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}