{"ast":null,"code":"import axios from \"axios\";\n\nconst crypto = require(\"crypto\");\n\nasync function handler(req, res) {\n  console.log(\"req.method in Signin:\" + req.method);\n\n  if (req.method === \"POST\") {\n    console.log('req.body.detail:' + req.body.detail);\n    console.log('req.body.detail:' + req.body.detail);\n    console.log('req.body.detail:' + req.body.detail);\n    let formData = req.body;\n    const iv = \"1010101010101010\";\n    let key = \"3131313131313131313131313131313131313131313131313131313131313131\";\n    const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(key, \"hex\"), Buffer.from(iv));\n    cipher.setAutoPadding(true);\n    let crypt = cipher.update(formData.detail, 'utf8', 'base64');\n    crypt += cipher.final(\"base64\");\n    formData.detail = crypt;\n\n    try {\n      const response = await axios.post(\"http://localhost:8000/v1/feedback/createFeedback\", {\n        \"formData\": formData\n      });\n      res.status(200).json(response.data);\n    } catch (err) {\n      console.log(\"err:\" + err);\n      res.status(401).json(err.response.data);\n    }\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/satheeskumarpalanisamy/service/careerservice/client/pages/api/feedback/create.js"],"names":["axios","crypto","require","handler","req","res","console","log","method","body","detail","formData","iv","key","cipher","createCipheriv","Buffer","from","setAutoPadding","crypt","update","final","response","post","status","json","data","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BH,GAAG,CAACI,MAA1C;;AACA,MAAIJ,GAAG,CAACI,MAAJ,KAAe,MAAnB,EAA2B;AAEzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBH,GAAG,CAACK,IAAJ,CAASC,MAA1C;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBH,GAAG,CAACK,IAAJ,CAASC,MAA1C;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBH,GAAG,CAACK,IAAJ,CAASC,MAA1C;AAED,QAAIC,QAAQ,GAAGP,GAAG,CAACK,IAAnB;AAGC,UAAMG,EAAE,GAAG,kBAAX;AACA,QAAIC,GAAG,GAAG,kEAAV;AAEA,UAAMC,MAAM,GAAGb,MAAM,CAACc,cAAP,CAAsB,aAAtB,EAAqCC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiB,KAAjB,CAArC,EAA8DG,MAAM,CAACC,IAAP,CAAYL,EAAZ,CAA9D,CAAf;AACAE,IAAAA,MAAM,CAACI,cAAP,CAAsB,IAAtB;AACA,QAAIC,KAAK,GAAGL,MAAM,CAACM,MAAP,CAAcT,QAAQ,CAACD,MAAvB,EAA+B,MAA/B,EAAuC,QAAvC,CAAZ;AACAS,IAAAA,KAAK,IAAIL,MAAM,CAACO,KAAP,CAAa,QAAb,CAAT;AAEAV,IAAAA,QAAQ,CAACD,MAAT,GAAkBS,KAAlB;;AAEA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CACrB,kDADqB,EAErB;AACI,oBAAaZ;AADjB,OAFqB,CAAvB;AAOAN,MAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,QAAQ,CAACI,IAA9B;AACD,KATD,CASE,OAAOC,GAAP,EAAY;AACZrB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASoB,GAArB;AACAtB,MAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsBE,GAAG,CAACL,QAAJ,CAAaI,IAAnC;AACD;AACF;AACF;;AAED,eAAevB,OAAf","sourcesContent":["import axios from \"axios\";\nconst crypto = require(\"crypto\");\n\nasync function handler(req, res) {\n  console.log(\"req.method in Signin:\" + req.method);\n  if (req.method === \"POST\") {\n\n    console.log('req.body.detail:' + req.body.detail);\n    console.log('req.body.detail:' + req.body.detail);\n    console.log('req.body.detail:' + req.body.detail);\n    \n   let formData = req.body;\n\n\n    const iv = \"1010101010101010\";\n    let key = \"3131313131313131313131313131313131313131313131313131313131313131\";\n\n    const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(key, \"hex\"), Buffer.from(iv));\n    cipher.setAutoPadding(true)\n    let crypt = cipher.update(formData.detail, 'utf8', 'base64');\n    crypt += cipher.final(\"base64\");\n\n    formData.detail = crypt\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/v1/feedback/createFeedback\",\n        {\n            \"formData\" : formData,\n        }\n      );\n\n      res.status(200).json(response.data);\n    } catch (err) {\n      console.log(\"err:\" + err);\n      res.status(401).json( err.response.data );\n    }\n  }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}