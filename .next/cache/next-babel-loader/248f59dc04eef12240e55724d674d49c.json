{"ast":null,"code":"var _jsxFileName = \"/Users/satheeskumarpalanisamy/service/careerservice/client/pages/edit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport buildClient from '../api/build-client';\nimport axios from \"axios\";\n\nconst EditSubCribe = ({\n  currentUser\n}) => {\n  const {\n    0: depList,\n    1: SetDepList\n  } = useState([]);\n  const {\n    0: checkBoxList,\n    1: setCheckBoxList\n  } = useState(checkBoxInitObj);\n  const curDepList = [\"Information Technology\", \"Textile\", \"Automobile\", \"Medical Science\", \"Marine\", \"Business Management\", \"Agriculture & Biology\", \"Electrical & Electronics\", \"Chemical\", \"Communication\", \"Civil\", \"Mech & Manufacturing\", \"Entertainment\", \"Aerospace\", \"Physics\", \"Maths\", \"Arts and Hotel\"];\n\n  const checkBoxInitObj = () => {\n    curDepList.map((sinDep, index) => {\n      console.log('checkBoxInitObj value');\n      let subcribedValue = false;\n\n      for (let j = 0; j < depList.length; j++) {\n        if (depList[j] === sinDep) {\n          subcribedValue = true;\n        }\n      }\n\n      return {\n        \"department\": sinDep,\n        \"subcribed\": subcribedValue\n      };\n    });\n  };\n\n  const handleCheckboxClick = (event, checkBoxDepart) => {\n    console.log('event.target.checked:' + event.target.checked);\n    console.log('checkBoxDepart:' + checkBoxDepart.department);\n    let newCheckObj = [...checkBoxList];\n    newCheckObj.map((singleCObj, index) => {\n      if (singleCObj.department === checkBoxDepart.department) {\n        let newState = newCheckObj[index].subcribed;\n        newCheckObj[index].subcribed = !newState;\n        console.log('newCheckObj[index].department:' + newCheckObj[index].department);\n        console.log('newCheckObj[index].subcribed:' + newCheckObj[index].subcribed);\n      }\n    });\n    setCheckBoxList([...newCheckObj]);\n  };\n\n  useEffect(() => {\n    axios.get(\"/api/subcribe\").then(response => SetDepList([...response.data])).catch(error => {\n      console.log(error);\n    });\n    setCheckBoxList([...checkBoxInitObj]);\n  }, []);\n  const depRenderList = checkBoxInitObj.map((sinDep, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 2\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: sinDep.subcribed,\n      onChange: e => handleCheckboxClick(e, sinDep),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 4\n      }\n    }, \" \"), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 18\n      }\n    }, sinDep.department));\n  });\n\n  const finalRenderDep = __jsx(\"div\", {\n    className: \"p-d-flex p-flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 26\n    }\n  }, depRenderList);\n\n  return currentUser ? __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, \"Subcribed Department List\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, finalRenderDep), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }\n  }, \"Submit\")) : __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, \"You are NOT signed in\");\n};\n\nEditSubCribe.getInitialProps = async context => {\n  console.log('Edit Page!');\n  const client = buildClient(context);\n  const {\n    data\n  } = await client.get('/api/users/currentuser');\n  console.log('data:' + data.currentUser);\n  return data;\n};\n\nexport default EditSubCribe;","map":{"version":3,"sources":["/Users/satheeskumarpalanisamy/service/careerservice/client/pages/edit.js"],"names":["useEffect","useState","buildClient","axios","EditSubCribe","currentUser","depList","SetDepList","checkBoxList","setCheckBoxList","checkBoxInitObj","curDepList","map","sinDep","index","console","log","subcribedValue","j","length","handleCheckboxClick","event","checkBoxDepart","target","checked","department","newCheckObj","singleCObj","newState","subcribed","get","then","response","data","catch","error","depRenderList","e","finalRenderDep","getInitialProps","context","client"],"mappings":"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","sourcesContent":["import { useEffect,useState } from 'react';\nimport buildClient from '../api/build-client';\nimport axios from \"axios\";\n\nconst EditSubCribe = ({ currentUser }) => {\n\nconst [depList, SetDepList] = useState([]);\nconst [checkBoxList,setCheckBoxList] = useState(checkBoxInitObj);\nconst curDepList = [\n      \"Information Technology\",\n      \"Textile\",\n      \"Automobile\",\n      \"Medical Science\",\n      \"Marine\",\n      \"Business Management\",\n      \"Agriculture & Biology\",\n      \"Electrical & Electronics\",\n      \"Chemical\",\n      \"Communication\",\n      \"Civil\",\n      \"Mech & Manufacturing\",\n      \"Entertainment\",\n      \"Aerospace\",\n      \"Physics\",\n      \"Maths\",\n      \"Arts and Hotel\"\n];\n\nconst checkBoxInitObj = () => { curDepList.map((sinDep,index) => {\n  console.log('checkBoxInitObj value');\n\n  let subcribedValue = false\n\n  for (let j=0; j < depList.length;j++) {\n    if (depList[j] === sinDep) {\n      subcribedValue = true;\n    }\n  }\n\n  return {\n    \"department\": sinDep,\n    \"subcribed\": subcribedValue\n  }\n})\n\n}\n\nconst handleCheckboxClick = (event,checkBoxDepart) => {\n\n  console.log('event.target.checked:' + event.target.checked);\n  console.log('checkBoxDepart:' + checkBoxDepart.department);\n\n  let newCheckObj = [...checkBoxList];\n\n  newCheckObj.map((singleCObj,index) => {\n\n    if (singleCObj.department === checkBoxDepart.department) {\n      let newState = newCheckObj[index].subcribed;\n      newCheckObj[index].subcribed = !newState;\n      console.log('newCheckObj[index].department:' + newCheckObj[index].department);\n      console.log('newCheckObj[index].subcribed:' + newCheckObj[index].subcribed);\n    }\n  \n  });\n\n  setCheckBoxList([...newCheckObj]);\n\n}\n\n\n useEffect(() => {\n    axios.get(\"/api/subcribe\")\n    .then((response) => SetDepList([...response.data]))\n    .catch((error) => {\n      console.log(error)\n    });  \n    setCheckBoxList([...checkBoxInitObj]);\n\n },[]);\n\n\n const depRenderList = checkBoxInitObj.map((sinDep,index) => {\n \n  return(\n <div key={index}> \n   <input type=\"checkbox\" checked={sinDep.subcribed} onChange={(e) => handleCheckboxClick(e,sinDep)}></input>\n   <span> </span><label>{sinDep.department}</label>\n </div> \n  );\n });\n\n\n const finalRenderDep =  <div className=\"p-d-flex p-flex-column\">\n   {depRenderList}\n </div>\n\n  return currentUser ? (\n    <div className=\"container\">\n      <br></br>\n    <h2>Subcribed Department List</h2>\n    <br></br>\n    <div>\n    {finalRenderDep}\n    </div>\n    <br></br>\n   <button>Submit</button>\n    </div>\n \n    \n  ) : (\n    <h1>You are NOT signed in</h1>\n  );\n};\n\nEditSubCribe.getInitialProps = async context => {\n  console.log('Edit Page!');\n  const client = buildClient(context);\n  const { data } = await client.get('/api/users/currentuser');\n  console.log('data:' + data.currentUser);\n\n  return data;\n};\n\nexport default EditSubCribe;\n\n"]},"metadata":{},"sourceType":"module"}