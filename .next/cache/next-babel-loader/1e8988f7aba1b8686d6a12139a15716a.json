{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport cookie from 'cookie';\n\nfunction parseCookies(req) {\n  return cookie.parse(req ? req.headers.cookie || \"\" : document.cookie);\n}\n\nasync function handler(req, res) {\n  console.log(\"req.method in Signin:\" + req.method);\n\n  if (req.method === \"POST\") {\n    try {\n      const response = await axios.post(\"http://localhost:5001/api/users/signin\", {\n        email: req.body.email,\n        password: req.body.password\n      });\n\n      const headersDet = _objectSpread({}, response.headers); //  const cookie1 =  parseCookies(response);\n\n\n      console.log(\"------------------------\");\n      console.log(headersDet['set-cookie']);\n      console.log(\"------------------------\"); //res.headers = response.headers;\n\n      console.log(\"id:\" + response.data.id);\n      res.status(200).json(response.data);\n    } catch (err) {\n      console.log(\"err:\" + err);\n      res.status(401).json({\n        message: \"Not authenticated!\"\n      });\n    }\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/satheeskumarpalanisamy/service/careerservice/client/pages/api/signin.js"],"names":["axios","cookie","parseCookies","req","parse","headers","document","handler","res","console","log","method","response","post","email","body","password","headersDet","data","id","status","json","err","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,SAAOF,MAAM,CAACG,KAAP,CAAaD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYJ,MAAZ,IAAsB,EAAzB,GAA8BK,QAAQ,CAACL,MAAvD,CAAP;AACD;;AAED,eAAeM,OAAf,CAAuBJ,GAAvB,EAA4BK,GAA5B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BP,GAAG,CAACQ,MAA1C;;AACA,MAAIR,GAAG,CAACQ,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACH,YAAMC,QAAQ,GAAI,MAAMZ,KAAK,CACzBa,IADoB,CAEnB,wCAFmB,EAGnB;AACEC,QAAAA,KAAK,EAAEX,GAAG,CAACY,IAAJ,CAASD,KADlB;AAEEE,QAAAA,QAAQ,EAAEb,GAAG,CAACY,IAAJ,CAASC;AAFrB,OAHmB,CAAxB;;AAQF,YAAMC,UAAU,qBAAOL,QAAQ,CAACP,OAAhB,CAAhB,CATK,CAUP;;;AACEI,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYO,UAAU,CAAC,YAAD,CAAtB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAbK,CAcD;;AAEJD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQE,QAAQ,CAACM,IAAT,CAAcC,EAAlC;AAEGX,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,QAAQ,CAACM,IAA9B;AACD,KAnBD,CAmBE,OAAOI,GAAP,EAAY;AACZb,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASY,GAArB;AACAd,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAArB;AACD;AACF;AACF;;AAGD,eAAehB,OAAf","sourcesContent":["import axios from \"axios\";\nimport cookie from 'cookie'\n\nfunction parseCookies(req) {\n  return cookie.parse(req ? req.headers.cookie || \"\" : document.cookie);\n}\n\nasync function handler(req, res) {\n  console.log(\"req.method in Signin:\" + req.method);\n  if (req.method === \"POST\") {\n    try {\n     const response =  await axios\n        .post(\n          \"http://localhost:5001/api/users/signin\",\n          {\n            email: req.body.email,\n            password: req.body.password,\n          },\n        )\n   const headersDet = {...response.headers};\n //  const cookie1 =  parseCookies(response);\n   console.log(\"------------------------\");\n   console.log(headersDet['set-cookie']);\n   console.log(\"------------------------\");\n       //res.headers = response.headers;\n\n   console.log(\"id:\" + response.data.id);\n\n      res.status(200).json(response.data);\n    } catch (err) {\n      console.log(\"err:\" + err);\n      res.status(401).json({ message: \"Not authenticated!\" });\n    }\n  }\n}\n\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}