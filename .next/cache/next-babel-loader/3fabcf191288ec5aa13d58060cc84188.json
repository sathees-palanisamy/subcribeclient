{"ast":null,"code":"var _jsxFileName = \"/Users/satheeskumarpalanisamy/service/careerservice/client/pages/edit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport buildClient from '../api/build-client';\nimport axios from \"axios\";\n\nconst EditSubCribe = ({\n  currentUser\n}) => {\n  const {\n    0: depList,\n    1: SetDepList\n  } = useState([]);\n  const {\n    0: newDepList,\n    1: SetNewDepList\n  } = useState([]);\n  const {\n    0: checkBoxList,\n    1: setCheckBoxList\n  } = useState([]);\n  const {\n    0: subId,\n    1: setSubID\n  } = useState('');\n  const curDepList = [\"Information Technology\", \"Textile\", \"Automobile\", \"Medical Science\", \"Marine\", \"Business Management\", \"Agriculture & Biology\", \"Electrical & Electronics\", \"Chemical\", \"Communication\", \"Civil\", \"Mech & Manufacturing\", \"Entertainment\", \"Aerospace\", \"Physics\", \"Maths\", \"Arts and Hotel\"];\n\n  const handleCheckboxClick = (event, checkBoxDepart) => {\n    let newCheckObj = [...checkBoxList];\n    newCheckObj.map((singleCObj, index) => {\n      if (singleCObj.department === checkBoxDepart.department) {\n        let newState = newCheckObj[index].subcribed;\n        newCheckObj[index].subcribed = !newState;\n\n        if (newCheckObj[index].subcribed === true) {\n          let newdepList = [...newDepList, newCheckObj[index].department];\n          SetNewDepList([...newdepList]);\n        } else {\n          const newlist2 = depList.map(dep1 => dep1 !== checkBoxDepart.department);\n        }\n      }\n    });\n    setCheckBoxList([...newCheckObj]);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    var newList1 = [];\n    axios.get(\"/api/subcribe\").then(response => {\n      setSubID(response.data.id);\n      SetDepList([...response.data]);\n\n      if (newDepList.length === 0) {\n        SetNewDepList([...response.data]);\n        newList1 = [...response.data];\n      } else {\n        newList1 = [...newDepList];\n      }\n\n      const checkBoxInitObj = curDepList.map((sinDep, index) => {\n        let subcribedValue = false;\n\n        for (let j = 0; j < newList1.length; j++) {\n          if (newList1[j] === sinDep) {\n            subcribedValue = true;\n          }\n        }\n\n        return {\n          \"department\": sinDep,\n          \"subcribed\": subcribedValue\n        };\n      });\n      setCheckBoxList([...checkBoxInitObj]);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const depRenderList = checkBoxList.map((sinDep, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 2\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: sinDep.subcribed,\n      onChange: e => handleCheckboxClick(e, sinDep),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 4\n      }\n    }, \" \"), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 18\n      }\n    }, sinDep.department));\n  });\n\n  const finalRenderDep = __jsx(\"div\", {\n    className: \"p-d-flex p-flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 26\n    }\n  }, depRenderList);\n\n  return currentUser ? __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, \"Subcribed Department List\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, finalRenderDep), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }), __jsx(\"button\", {\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }\n  }, \"Submit\")) : __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, \"You are NOT signed in\");\n};\n\nEditSubCribe.getInitialProps = async context => {\n  console.log('Edit Page!');\n  const client = buildClient(context);\n  const {\n    data\n  } = await client.get('/api/users/currentuser');\n  console.log('data:' + data.currentUser);\n  return data;\n};\n\nexport default EditSubCribe;","map":{"version":3,"sources":["/Users/satheeskumarpalanisamy/service/careerservice/client/pages/edit.js"],"names":["useEffect","useState","buildClient","axios","EditSubCribe","currentUser","depList","SetDepList","newDepList","SetNewDepList","checkBoxList","setCheckBoxList","subId","setSubID","curDepList","handleCheckboxClick","event","checkBoxDepart","newCheckObj","map","singleCObj","index","department","newState","subcribed","newdepList","newlist2","dep1","submitHandler","preventDefault","newList1","get","then","response","data","id","length","checkBoxInitObj","sinDep","subcribedValue","j","catch","error","console","log","depRenderList","e","finalRenderDep","getInitialProps","context","client"],"mappings":"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","sourcesContent":["import { useEffect,useState } from 'react';\nimport buildClient from '../api/build-client';\nimport axios from \"axios\";\n\nconst EditSubCribe = ({ currentUser }) => {\n\nconst [depList, SetDepList] = useState([]);\nconst [newDepList, SetNewDepList] = useState([]);\nconst [checkBoxList,setCheckBoxList] = useState([]);\nconst [subId,setSubID] = useState('');\nconst curDepList = [\n      \"Information Technology\",\n      \"Textile\",\n      \"Automobile\",\n      \"Medical Science\",\n      \"Marine\",\n      \"Business Management\",\n      \"Agriculture & Biology\",\n      \"Electrical & Electronics\",\n      \"Chemical\",\n      \"Communication\",\n      \"Civil\",\n      \"Mech & Manufacturing\",\n      \"Entertainment\",\n      \"Aerospace\",\n      \"Physics\",\n      \"Maths\",\n      \"Arts and Hotel\"\n];\n\n\n\nconst handleCheckboxClick = (event,checkBoxDepart) => {\n\n \n  let newCheckObj = [...checkBoxList];\n\n  newCheckObj.map((singleCObj,index) => { \n\n    if (singleCObj.department === checkBoxDepart.department) {\n      let newState = newCheckObj[index].subcribed;\n      newCheckObj[index].subcribed = !newState;\n      if (newCheckObj[index].subcribed === true ) {\n        let newdepList = [...newDepList,newCheckObj[index].department];\n        SetNewDepList([...newdepList]);\n      } else {\n        const newlist2 = depList.map((dep1) => dep1!== checkBoxDepart.department)\n      }\n    }\n  \n  });\n\n  setCheckBoxList([...newCheckObj]);\n\n}\n\nconst submitHandler = (event) => {\n  event.preventDefault();\n}\n\n\n useEffect( () => {\n   var newList1 = [];\n   axios.get(\"/api/subcribe\")\n    .then((response) => {\n    setSubID(response.data.id);\n    SetDepList([...response.data]);\n    if (newDepList.length === 0) {\n      SetNewDepList([...response.data]);\n      newList1 = [...response.data];\n    } else {\n      newList1 = [...newDepList];\n    }\n\n    const checkBoxInitObj = curDepList.map((sinDep,index) => {\n      let subcribedValue = false\n    \n      for (let j=0; j < newList1.length;j++) {\n        if (newList1[j] === sinDep) {\n          subcribedValue = true;\n        }\n      }\n    \n      return {\n        \"department\": sinDep,\n        \"subcribed\": subcribedValue\n      }\n    })\n     setCheckBoxList([...checkBoxInitObj]);\n   \n\n  })\n    .catch((error) => {\n      console.log(error)\n    }); \n    \n\n },[]);\n\n\n const depRenderList = checkBoxList.map((sinDep,index) => {\n \n  return(\n <div key={index}> \n   <input type=\"checkbox\" checked={sinDep.subcribed} onChange={(e) => handleCheckboxClick(e,sinDep)}></input>\n   <span> </span><label>{sinDep.department}</label>\n </div> \n  );\n });\n\n\n const finalRenderDep =  <div className=\"p-d-flex p-flex-column\">\n   {depRenderList}\n </div>\n\n  return currentUser ? (\n    <div className=\"container\">\n      <br></br>\n    <h2>Subcribed Department List</h2>\n    <br></br>\n    <div>\n    {finalRenderDep}\n    </div>\n    <br></br>\n   <button onClick={submitHandler}>Submit</button>\n    </div>\n \n    \n  ) : (\n    <h1>You are NOT signed in</h1>\n  );\n};\n\nEditSubCribe.getInitialProps = async context => {\n  console.log('Edit Page!');\n  const client = buildClient(context);\n  const { data } = await client.get('/api/users/currentuser');\n  console.log('data:' + data.currentUser);\n\n  return data;\n};\n\nexport default EditSubCribe;\n\n"]},"metadata":{},"sourceType":"module"}