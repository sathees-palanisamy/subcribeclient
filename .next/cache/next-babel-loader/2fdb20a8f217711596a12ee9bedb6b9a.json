{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { serialize } from 'cookie';\n\nasync function handler(req, res) {\n  console.log(\"req.method in Signin:\" + req.method);\n\n  if (req.method === \"POST\") {\n    try {\n      const response = await axios.post(\"http://localhost:5001/api/users/signin\", {\n        email: req.body.email,\n        password: req.body.password\n      });\n\n      const headersDet = _objectSpread({}, response.headers);\n\n      const cookieExt = headersDet['set-cookie']; //  const cookie1 =  parseCookies(response);\n\n      console.log(\"------------------------\");\n      console.log(cookieExt[0]);\n      console.log(\"------------------------\");\n      console.log(\"id:\" + response.data.id);\n      res.setHeader('Set-Cookie', serialize('express:sess', 'eyJqd3QiOiJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcFpDSTZJall3T1dGaE4yRmpNemhqTTJFeFlUUXhPV1kxT1dSaVppSXNJbVZ0WVdsc0lqb2ljekZBWjIxaGFXd3VZMjl0SWl3aWFXRjBJam94TmpJeU1EWXlNalkwZlEuaEdsYjkwRnM1OEN2ZnlyUHdVeXI1TE5NME1YOWRoclNXdTM5ai1NWG1yNCJ9', {\n        path: '/'\n      }));\n      res.status(200).json(response.data);\n    } catch (err) {\n      console.log(\"err:\" + err);\n      res.status(401).json({\n        message: \"Not authenticated!\"\n      });\n    }\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/satheeskumarpalanisamy/service/careerservice/client/pages/api/signin.js"],"names":["axios","serialize","handler","req","res","console","log","method","response","post","email","body","password","headersDet","headers","cookieExt","data","id","setHeader","path","status","json","err","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BH,GAAG,CAACI,MAA1C;;AACA,MAAIJ,GAAG,CAACI,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACH,YAAMC,QAAQ,GAAI,MAAMR,KAAK,CACzBS,IADoB,CAEnB,wCAFmB,EAGnB;AACEC,QAAAA,KAAK,EAAEP,GAAG,CAACQ,IAAJ,CAASD,KADlB;AAEEE,QAAAA,QAAQ,EAAET,GAAG,CAACQ,IAAJ,CAASC;AAFrB,OAHmB,CAAxB;;AAQF,YAAMC,UAAU,qBAAOL,QAAQ,CAACM,OAAhB,CAAhB;;AACA,YAAMC,SAAS,GAAIF,UAAU,CAAC,YAAD,CAA7B,CAVK,CAWP;;AACER,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYS,SAAS,CAAC,CAAD,CAArB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEAD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQE,QAAQ,CAACQ,IAAT,CAAcC,EAAlC;AAEAb,MAAAA,GAAG,CAACc,SAAJ,CAAc,YAAd,EAA4BjB,SAAS,CAAC,cAAD,EAAiB,8PAAjB,EAAiR;AAAEkB,QAAAA,IAAI,EAAE;AAAR,OAAjR,CAArC;AAEGf,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBb,QAAQ,CAACQ,IAA9B;AACD,KArBD,CAqBE,OAAOM,GAAP,EAAY;AACZjB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASgB,GAArB;AACAlB,MAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAArB;AACD;AACF;AACF;;AAGD,eAAerB,OAAf","sourcesContent":["import axios from \"axios\";\nimport { serialize } from 'cookie';\n\nasync function handler(req, res) {\n  console.log(\"req.method in Signin:\" + req.method);\n  if (req.method === \"POST\") {\n    try {\n     const response =  await axios\n        .post(\n          \"http://localhost:5001/api/users/signin\",\n          {\n            email: req.body.email,\n            password: req.body.password,\n          },\n        )\n   const headersDet = {...response.headers};\n   const cookieExt  = headersDet['set-cookie']\n //  const cookie1 =  parseCookies(response);\n   console.log(\"------------------------\");\n   console.log(cookieExt[0]);\n   console.log(\"------------------------\");\n\n   console.log(\"id:\" + response.data.id);\n\n   res.setHeader('Set-Cookie', serialize('express:sess', 'eyJqd3QiOiJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcFpDSTZJall3T1dGaE4yRmpNemhqTTJFeFlUUXhPV1kxT1dSaVppSXNJbVZ0WVdsc0lqb2ljekZBWjIxaGFXd3VZMjl0SWl3aWFXRjBJam94TmpJeU1EWXlNalkwZlEuaEdsYjkwRnM1OEN2ZnlyUHdVeXI1TE5NME1YOWRoclNXdTM5ai1NWG1yNCJ9', { path: '/' }));\n\n      res.status(200).json(response.data);\n    } catch (err) {\n      console.log(\"err:\" + err);\n      res.status(401).json({ message: \"Not authenticated!\" });\n    }\n  }\n}\n\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}