{"ast":null,"code":"var _jsxFileName = \"/Users/satheeskumarpalanisamy/service/careerservice/client/pages/edit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport buildClient from '../api/build-client';\nimport axios from \"axios\";\n\nconst EditSubCribe = ({\n  currentUser\n}) => {\n  const {\n    0: depList,\n    1: SetDepList\n  } = useState([]);\n  const {\n    0: newDepList,\n    1: SetNewDepList\n  } = useState([]);\n  const {\n    0: checkBoxList,\n    1: setCheckBoxList\n  } = useState([]);\n  const curDepList = [\"Information Technology\", \"Textile\", \"Automobile\", \"Medical Science\", \"Marine\", \"Business Management\", \"Agriculture & Biology\", \"Electrical & Electronics\", \"Chemical\", \"Communication\", \"Civil\", \"Mech & Manufacturing\", \"Entertainment\", \"Aerospace\", \"Physics\", \"Maths\", \"Arts and Hotel\"];\n\n  const handleCheckboxClick = (event, checkBoxDepart) => {\n    console.log('event.target.checked:' + event.target.checked);\n    console.log('checkBoxDepart:' + checkBoxDepart.department);\n    let newCheckObj = [...checkBoxList];\n    console.log('checkBoxList.length:' + checkBoxList.length);\n    console.log('newCheckObj.length:' + newCheckObj.length);\n    newCheckObj.map((singleCObj, index) => {\n      console.log('singleCObj.department:' + singleCObj.department);\n      console.log('checkBoxDepart:' + checkBoxDepart.department);\n\n      if (singleCObj.department === checkBoxDepart.department) {\n        let newState = newCheckObj[index].subcribed;\n        newCheckObj[index].subcribed = !newState;\n        console.log('newCheckObj[index].department:' + newCheckObj[index].department);\n        console.log('newCheckObj[index].subcribed:' + newCheckObj[index].subcribed);\n\n        if (newCheckObj[index].subcribed === true) {\n          let newdepList = [...newDepList, newCheckObj[index].department];\n          SetNewDepList([...newdepList]);\n        } else {}\n      }\n    });\n    setCheckBoxList([...newCheckObj]);\n  };\n\n  useEffect(async () => {\n    var newList1 = [];\n    await axios.get(\"/api/subcribe\").then(response => {\n      console.log('response.data.length' + response.data.length);\n      console.log('newDepList.length' + newDepList.length);\n      SetDepList([...response.data]);\n\n      if (newDepList.length === 0) {\n        SetNewDepList([...response.data]);\n        newList1 = [...response.data];\n      } else {\n        newList1 = [...newDepList];\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log('newList1.length' + newList1.length);\n    const checkBoxInitObj = curDepList.map((sinDep, index) => {\n      console.log('checkBoxInitObj value');\n      let subcribedValue = false;\n\n      for (let j = 0; j < newList1.length; j++) {\n        if (newList1[j] === sinDep) {\n          subcribedValue = true;\n        }\n      }\n\n      return {\n        \"department\": sinDep,\n        \"subcribed\": subcribedValue\n      };\n    });\n    setCheckBoxList([...checkBoxInitObj]);\n  }, []);\n  const depRenderList = checkBoxList.map((sinDep, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 2\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: sinDep.subcribed,\n      onChange: e => handleCheckboxClick(e, sinDep),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 4\n      }\n    }, \" \"), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 18\n      }\n    }, sinDep.department));\n  });\n\n  const finalRenderDep = __jsx(\"div\", {\n    className: \"p-d-flex p-flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 26\n    }\n  }, depRenderList);\n\n  return currentUser ? __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, \"Subcribed Department List\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, finalRenderDep), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }\n  }, \"Submit\")) : __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, \"You are NOT signed in\");\n};\n\nEditSubCribe.getInitialProps = async context => {\n  console.log('Edit Page!');\n  const client = buildClient(context);\n  const {\n    data\n  } = await client.get('/api/users/currentuser');\n  console.log('data:' + data.currentUser);\n  return data;\n};\n\nexport default EditSubCribe;","map":{"version":3,"sources":["/Users/satheeskumarpalanisamy/service/careerservice/client/pages/edit.js"],"names":["useEffect","useState","buildClient","axios","EditSubCribe","currentUser","depList","SetDepList","newDepList","SetNewDepList","checkBoxList","setCheckBoxList","curDepList","handleCheckboxClick","event","checkBoxDepart","console","log","target","checked","department","newCheckObj","length","map","singleCObj","index","newState","subcribed","newdepList","newList1","get","then","response","data","catch","error","checkBoxInitObj","sinDep","subcribedValue","j","depRenderList","e","finalRenderDep","getInitialProps","context","client"],"mappings":"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","sourcesContent":["import { useEffect,useState } from 'react';\nimport buildClient from '../api/build-client';\nimport axios from \"axios\";\n\nconst EditSubCribe = ({ currentUser }) => {\n\nconst [depList, SetDepList] = useState([]);\nconst [newDepList, SetNewDepList] = useState([]);\nconst [checkBoxList,setCheckBoxList] = useState([]);\nconst curDepList = [\n      \"Information Technology\",\n      \"Textile\",\n      \"Automobile\",\n      \"Medical Science\",\n      \"Marine\",\n      \"Business Management\",\n      \"Agriculture & Biology\",\n      \"Electrical & Electronics\",\n      \"Chemical\",\n      \"Communication\",\n      \"Civil\",\n      \"Mech & Manufacturing\",\n      \"Entertainment\",\n      \"Aerospace\",\n      \"Physics\",\n      \"Maths\",\n      \"Arts and Hotel\"\n];\n\n\n\nconst handleCheckboxClick = (event,checkBoxDepart) => {\n\n  console.log('event.target.checked:' + event.target.checked);\n  console.log('checkBoxDepart:' + checkBoxDepart.department);\n\n  let newCheckObj = [...checkBoxList];\n\n  console.log('checkBoxList.length:' + checkBoxList.length);\n  console.log('newCheckObj.length:' + newCheckObj.length);\n\n  newCheckObj.map((singleCObj,index) => {\n\n    console.log('singleCObj.department:' + singleCObj.department);\n    console.log('checkBoxDepart:' + checkBoxDepart.department);\n  \n\n    if (singleCObj.department === checkBoxDepart.department) {\n      let newState = newCheckObj[index].subcribed;\n      newCheckObj[index].subcribed = !newState;\n      console.log('newCheckObj[index].department:' + newCheckObj[index].department);\n      console.log('newCheckObj[index].subcribed:' + newCheckObj[index].subcribed);\n      if (newCheckObj[index].subcribed === true ) {\n        let newdepList = [...newDepList,newCheckObj[index].department];\n        SetNewDepList([...newdepList]);\n      } else {\n\n      }\n    }\n  \n  });\n\n  setCheckBoxList([...newCheckObj]);\n\n}\n\n\n useEffect(async () => {\n   var newList1 = [];\n  await axios.get(\"/api/subcribe\")\n    .then((response) => {\n      console.log('response.data.length' + response.data.length);\n      console.log('newDepList.length' + newDepList.length);\n    SetDepList([...response.data]);\n    if (newDepList.length === 0) {\n      SetNewDepList([...response.data]);\n      newList1 = [...response.data];\n    } else {\n      newList1 = [...newDepList];\n    }\n  })\n    .catch((error) => {\n      console.log(error)\n    }); \n    \n    console.log('newList1.length' + newList1.length);\n\n    const checkBoxInitObj = curDepList.map((sinDep,index) => {\n      console.log('checkBoxInitObj value');\n    \n      let subcribedValue = false\n    \n      for (let j=0; j < newList1.length;j++) {\n        if (newList1[j] === sinDep) {\n          subcribedValue = true;\n        }\n      }\n    \n      return {\n        \"department\": sinDep,\n        \"subcribed\": subcribedValue\n      }\n    })\n     setCheckBoxList([...checkBoxInitObj]);\n   \n\n },[]);\n\n\n const depRenderList = checkBoxList.map((sinDep,index) => {\n \n  return(\n <div key={index}> \n   <input type=\"checkbox\" checked={sinDep.subcribed} onChange={(e) => handleCheckboxClick(e,sinDep)}></input>\n   <span> </span><label>{sinDep.department}</label>\n </div> \n  );\n });\n\n\n const finalRenderDep =  <div className=\"p-d-flex p-flex-column\">\n   {depRenderList}\n </div>\n\n  return currentUser ? (\n    <div className=\"container\">\n      <br></br>\n    <h2>Subcribed Department List</h2>\n    <br></br>\n    <div>\n    {finalRenderDep}\n    </div>\n    <br></br>\n   <button>Submit</button>\n    </div>\n \n    \n  ) : (\n    <h1>You are NOT signed in</h1>\n  );\n};\n\nEditSubCribe.getInitialProps = async context => {\n  console.log('Edit Page!');\n  const client = buildClient(context);\n  const { data } = await client.get('/api/users/currentuser');\n  console.log('data:' + data.currentUser);\n\n  return data;\n};\n\nexport default EditSubCribe;\n\n"]},"metadata":{},"sourceType":"module"}