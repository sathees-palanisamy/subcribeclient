{"ast":null,"code":"var _jsxFileName = \"/Users/satheeskumarpalanisamy/service/careerservice/client/pages/edit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport buildClient from '../api/build-client';\nimport axios from \"axios\";\n\nconst EditSubCribe = ({\n  currentUser\n}) => {\n  const {\n    0: depList,\n    1: SetDepList\n  } = useState([]);\n  const {\n    0: checkBoxList,\n    1: setCheckBoxList\n  } = useState([]);\n  const curDepList = [\"Information Technology\", \"Textile\", \"Automobile\", \"Medical Science\", \"Marine\", \"Business Management\", \"Agriculture & Biology\", \"Electrical & Electronics\", \"Chemical\", \"Communication\", \"Civil\", \"Mech & Manufacturing\", \"Entertainment\", \"Aerospace\", \"Physics\", \"Maths\", \"Arts and Hotel\"];\n  const checkBoxInitObj = curDepList.map((sinDep, index) => {\n    return {\n      \"department\": sinDep,\n      \"subcribed\": false\n    };\n  });\n\n  for (let i = 0; i < checkBoxInitObj.length; i++) {\n    for (let j = 0; j < depList.length; j++) {\n      if (depList[j] === checkBoxInitObj[i].department) {\n        checkBoxInitObj[i].subcribed = true;\n      }\n    }\n  }\n\n  useEffect(() => {\n    axios.get(\"/api/subcribe\").then(response => SetDepList([...response.data])).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const depRenderList = checkBoxInitObj.map(sinDep => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 2\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: sinDep.subcribed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }\n    }, \" \"), __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }\n    }, sinDep.department));\n  });\n\n  const finalRenderDep = __jsx(\"div\", {\n    className: \"p-d-flex p-flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }\n  }, depRenderList);\n\n  return currentUser ? __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, \"Subcribed Department List\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, finalRenderDep), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }, \"Submit\")) : __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"You are NOT signed in\");\n};\n\nEditSubCribe.getInitialProps = async context => {\n  console.log('Edit Page!');\n  const client = buildClient(context);\n  const {\n    data\n  } = await client.get('/api/users/currentuser');\n  console.log('data:' + data.currentUser);\n  return data;\n};\n\nexport default EditSubCribe;","map":{"version":3,"sources":["/Users/satheeskumarpalanisamy/service/careerservice/client/pages/edit.js"],"names":["useEffect","useState","buildClient","axios","EditSubCribe","currentUser","depList","SetDepList","checkBoxList","setCheckBoxList","curDepList","checkBoxInitObj","map","sinDep","index","i","length","j","department","subcribed","get","then","response","data","catch","error","console","log","depRenderList","finalRenderDep","getInitialProps","context","client"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAE1C,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACO,YAAD;AAAA,OAAcC;AAAd,MAAiCR,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAMS,UAAU,GAAG,CACb,wBADa,EAEb,SAFa,EAGb,YAHa,EAIb,iBAJa,EAKb,QALa,EAMb,qBANa,EAOb,uBAPa,EAQb,0BARa,EASb,UATa,EAUb,eAVa,EAWb,OAXa,EAYb,sBAZa,EAab,eAba,EAcb,WAda,EAeb,SAfa,EAgBb,OAhBa,EAiBb,gBAjBa,CAAnB;AAoBA,QAAMC,eAAe,GAAGD,UAAU,CAACE,GAAX,CAAe,CAACC,MAAD,EAAQC,KAAR,KAAkB;AACvD,WAAO;AACL,oBAAcD,MADT;AAEL,mBAAa;AAFR,KAAP;AAID,GALuB,CAAxB;;AAQA,OAAK,IAAIE,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAGJ,eAAe,CAACK,MAAjC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,SAAK,IAAIE,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGX,OAAO,CAACU,MAA1B,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,UAAIX,OAAO,CAACW,CAAD,CAAP,KAAeN,eAAe,CAACI,CAAD,CAAf,CAAmBG,UAAtC,EAAkD;AAChDP,QAAAA,eAAe,CAACI,CAAD,CAAf,CAAmBI,SAAnB,GAA+B,IAA/B;AACD;AAEJ;AACF;;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AACbG,IAAAA,KAAK,CAACiB,GAAN,CAAU,eAAV,EACCC,IADD,CACOC,QAAD,IAAcf,UAAU,CAAC,CAAC,GAAGe,QAAQ,CAACC,IAAb,CAAD,CAD9B,EAECC,KAFD,CAEQC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAJD;AAKF,GANQ,EAMP,EANO,CAAT;AASA,QAAMG,aAAa,GAAGjB,eAAe,CAACC,GAAhB,CAAqBC,MAAD,IAAY;AAErD,WACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEA,MAAM,CAACM,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAEgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQN,MAAM,CAACK,UAAf,CAFhB,CADC;AAMA,GARqB,CAAtB;;AAWA,QAAMW,cAAc,GAAI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACrBD,aADqB,CAAxB;;AAIC,SAAOvB,WAAW,GAChB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCwB,cADD,CAJA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,EAQD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARC,CADgB,GAchB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAdF;AAgBD,CAlFD;;AAoFAzB,YAAY,CAAC0B,eAAb,GAA+B,MAAMC,OAAN,IAAiB;AAC9CL,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAMK,MAAM,GAAG9B,WAAW,CAAC6B,OAAD,CAA1B;AACA,QAAM;AAAER,IAAAA;AAAF,MAAW,MAAMS,MAAM,CAACZ,GAAP,CAAW,wBAAX,CAAvB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUJ,IAAI,CAAClB,WAA3B;AAEA,SAAOkB,IAAP;AACD,CAPD;;AASA,eAAenB,YAAf","sourcesContent":["import { useEffect,useState } from 'react';\nimport buildClient from '../api/build-client';\nimport axios from \"axios\";\n\nconst EditSubCribe = ({ currentUser }) => {\n\nconst [depList, SetDepList] = useState([]);\nconst [checkBoxList,setCheckBoxList] = useState([]);\nconst curDepList = [\n      \"Information Technology\",\n      \"Textile\",\n      \"Automobile\",\n      \"Medical Science\",\n      \"Marine\",\n      \"Business Management\",\n      \"Agriculture & Biology\",\n      \"Electrical & Electronics\",\n      \"Chemical\",\n      \"Communication\",\n      \"Civil\",\n      \"Mech & Manufacturing\",\n      \"Entertainment\",\n      \"Aerospace\",\n      \"Physics\",\n      \"Maths\",\n      \"Arts and Hotel\"\n];\n\nconst checkBoxInitObj = curDepList.map((sinDep,index) => {\n  return {\n    \"department\": sinDep,\n    \"subcribed\": false\n  }\n})\n\n\nfor (let i=0;i < checkBoxInitObj.length;i++) {\n  for (let j=0; j < depList.length;j++) {\n      if (depList[j] === checkBoxInitObj[i].department) {\n        checkBoxInitObj[i].subcribed = true;\n      }\n\n  }\n}\n\n\n useEffect(() => {\n    axios.get(\"/api/subcribe\")\n    .then((response) => SetDepList([...response.data]))\n    .catch((error) => {\n      console.log(error)\n    });  \n },[]);\n\n\n const depRenderList = checkBoxInitObj.map((sinDep) => {\n \n  return(\n <div> \n   <input type=\"checkbox\" checked={sinDep.subcribed}></input>\n   <span> </span><label>{sinDep.department}</label>\n </div> \n  );\n });\n\n\n const finalRenderDep =  <div className=\"p-d-flex p-flex-column\">\n   {depRenderList}\n </div>\n\n  return currentUser ? (\n    <div className=\"container\">\n      <br></br>\n    <h2>Subcribed Department List</h2>\n    <br></br>\n    <div>\n    {finalRenderDep}\n    </div>\n    <br></br>\n   <button>Submit</button>\n    </div>\n \n    \n  ) : (\n    <h1>You are NOT signed in</h1>\n  );\n};\n\nEditSubCribe.getInitialProps = async context => {\n  console.log('Edit Page!');\n  const client = buildClient(context);\n  const { data } = await client.get('/api/users/currentuser');\n  console.log('data:' + data.currentUser);\n\n  return data;\n};\n\nexport default EditSubCribe;\n\n"]},"metadata":{},"sourceType":"module"}